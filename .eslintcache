[{"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\index.js":"1","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\App.js":"2","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\reportWebVitals.js":"3","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\TopLevel.js":"4","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\Folders.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":495,"mtime":1607033596028,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1663,"mtime":1607407393042,"results":"10","hashOfConfig":"7"},{"size":2612,"mtime":1607456496209,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nii0ka",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\index.js",[],["25","26"],"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\App.js",["27"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Import routers\nimport TopLevel from \"./components/TopLevel\";\nimport Folders from \"./components/Folders\";\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n\n        <Route path=\"/folders/:id\">\n          <Folders />\n        </Route>\n\n        <Route path=\"/\">\n          <TopLevel />\n        </Route>\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\TopLevel.js",["28"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction TopLevel() {\r\n\r\n    const [entries, setEntries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080\").then(res => setEntries(res.data));\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Top Level Folders and Files</h2>\r\n            <table border=\"1\">\r\n                <thead><tr><th>Name</th><th>Size</th><th>Operation</th></tr></thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        entries.map(entry =>\r\n                        // Folder\r\n                        {\r\n                            if (entry.folder === true) {\r\n                                return <tr key={entry.id}>\r\n\r\n                                    <td>\\ <Link to={`/folders/${entry.id}`}>{entry.name}</Link></td>\r\n\r\n                                    <td>Folder</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                // Files\r\n                            } else {\r\n                                return <tr key={entry.id}>\r\n                                    <td>{entry.name}</td>\r\n                                    <td>{entry.size} kb</td>\r\n                                </tr>;\r\n                            }\r\n                        }\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n//<td>\\ <Link to={`/folders/${entry.id}`}>{entry.name}</Link></td>\r\nexport default TopLevel;","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\Folders.js",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":4,"column":10,"nodeType":"36","messageId":"37","endLine":4,"endColumn":20},{"ruleId":"39","severity":1,"message":"40","line":15,"column":15,"nodeType":"41","endLine":27,"endColumn":6},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]