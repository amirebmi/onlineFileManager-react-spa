[{"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\index.js":"1","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\App.js":"2","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\reportWebVitals.js":"3","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\TopLevel.js":"4","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\Folders.js":"5","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\NewFolder.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":622,"mtime":1607464650753,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1636,"mtime":1607485775356,"results":"11","hashOfConfig":"8"},{"size":3190,"mtime":1607541310890,"results":"12","hashOfConfig":"8"},{"size":1198,"mtime":1607466066228,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"nii0ka",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\index.js",[],["30","31"],"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\App.js",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Import routers\nimport TopLevel from \"./components/TopLevel\";\nimport Folders from \"./components/Folders\";\nimport NewFolder from \"./components/NewFolder\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n\n        <Route path=\"/folders/:id\">\n          <Folders />\n        </Route>\n\n        <Route path=\"/newfolder/:id\">\n          <NewFolder />\n        </Route>\n\n        <Route path=\"/\">\n          <TopLevel />\n        </Route>\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\TopLevel.js",["33"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction TopLevel() {\r\n\r\n    let history = useHistory();\r\n\r\n    const [entries, setEntries] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080\").then(res => setEntries(res.data));\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Index /</h2>\r\n            <table border=\"1\">\r\n                <thead><tr><th>Name</th><th>Type</th></tr></thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        entries.map(entry =>\r\n                        // Folder\r\n                        {\r\n                            if (entry.folder === true) {\r\n                                return <tr key={entry.id}>\r\n                                    <td>\\ <Link to={`/folders/${entry.id}`}>{entry.name}</Link></td>\r\n                                    <td>Folder</td>\r\n                                </tr>\r\n                                // Files\r\n                            } else {\r\n                                return <tr key={entry.id}>\r\n                                    <td>{entry.name}</td>\r\n                                    <td>File</td>\r\n                                </tr>;\r\n                            }\r\n                        }\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n\r\n            <Link to={`/newfolder/${0}`}><button>Create Folder</button></Link>\r\n\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default TopLevel;","C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\Folders.js",["34"],"C:\\Users\\Amir\\git\\onlinefilemanager-react-spa\\src\\components\\NewFolder.js",["35","36","37"],"import { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction NewFolder() {\r\n\r\n    let history = useHistory();\r\n    let { id } = useParams();\r\n\r\n    const [name, setFolder] = useState(\"\");\r\n    const [parentFolderId, setParentFolderId] = useState(id);\r\n\r\n    \r\n\r\n    const onSubmit = function (e) {\r\n        e.preventDefault();\r\n\r\n        if (id === \"0\") {\r\n            axios.post(\"http://localhost:8080/folders\", {\r\n                name,\r\n            }).then(() => history.push(\"/\"));\r\n        } else {\r\n            axios.post(\"http://localhost:8080/folders\", {\r\n                name,\r\n                parentFolderId,\r\n            }).then(() => history.push(`/folders/${id}`));\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Create a New Folder</h2>\r\n            <form onSubmit={onSubmit}>\r\n\r\n                Folder Name: <input type=\"text\" name=\"name\" value={name} onChange={e => setFolder(e.target.value)} />\r\n                \r\n                <button>Create Folder</button>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default NewFolder;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":10,"column":9,"nodeType":"44","messageId":"45","endLine":10,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":14,"column":15,"nodeType":"49","endLine":23,"endColumn":6},{"ruleId":"42","severity":1,"message":"50","line":1,"column":20,"nodeType":"44","messageId":"45","endLine":1,"endColumn":29},{"ruleId":"42","severity":1,"message":"51","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":14},{"ruleId":"42","severity":1,"message":"52","line":13,"column":28,"nodeType":"44","messageId":"45","endLine":13,"endColumn":45},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useEffect' is defined but never used.","'Link' is defined but never used.","'setParentFolderId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]